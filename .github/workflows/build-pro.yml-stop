name: Build Production Image

on:
  push:
    branches:
      - 'main'

env:
  CI_REGISTRY_IMAGE: ghcr.io/tdtuan97/echarge-backend:latest
  CI_REGISTRY_TAG: echarge-backend:latest
  CI_REGISTRY_REPO: echarge-backend

jobs:
  deploy:
    runs-on: [ self-hosted, runner-echarge-backend ]
    steps:
      - name: Build image
        uses: actions/checkout@v3
      - name: Login Github package
        run: echo ${{ secrets.CI_TOKEN }} | docker login ghcr.io -u USERNAME --password-stdin
      - name: Build docker image
        run: docker build --cache-from $CI_REGISTRY_IMAGE --tag $CI_REGISTRY_TAG .
      - name: Create tag for image
        run: docker tag $CI_REGISTRY_TAG $CI_REGISTRY_IMAGE
      - name: Publish image
        run: docker push $CI_REGISTRY_IMAGE
      - name: Deploy image
        uses: appleboy/ssh-action@v0.1.10
        env:
          PATH_TO_PROJECT: '/home/echarge/echarge-backend'
          CI_REGISTRY_IMAGE: 'ghcr.io/tdtuan97/echarge-backend:latest'
          CI_TOKEN: ${{ secrets.CI_TOKEN }}
        with:
          host: ${{ secrets.E_CHARGE_DEV_HOST }}
          username: ${{ secrets.E_CHARGE_DEV_USERNAME }}
          password: ${{ secrets.E_CHARGE_DEV_PASSWORD }}
          port: ${{ secrets.E_CHARGE_DEV_PORT }}
          envs: PATH_TO_PROJECT,CI_REGISTRY_IMAGE,CI_TOKEN
          script: |
            echo "whoami"
            cd $PATH_TO_PROJECT
            docker image prune -f
            docker pull $CI_REGISTRY_IMAGE
            echo $CI_TOKEN | docker login ghcr.io -u USERNAME --password-stdin
            docker-compose down
            docker pull ${CI_REGISTRY_IMAGE}:latest
            git reset --hard
            git pull 
            docker-compose up -d